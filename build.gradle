plugins {
    id 'nebula.release' version '15.3.1'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id 'io.github.gradle-nexus.publish-plugin' version '1.0.0'
}

nexusPublishing {
    repositories {
        sonatype {
            username.set(System.getenv('SONATYPE_USER'))
            password.set(System.getenv('SONATYPE_TOKEN'))
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

def micronautModules = [
        project(':rest-bridge-micronaut'),
        project(':examples:micronaut-app')
]
def springModules = [
        project(':rest-bridge-spring-boot-starter'),
        project(':examples:spring-boot-app')
]
def publishModules = [
        project(':rest-bridge-core'),
        project(':rest-bridge-micronaut'),
        project(':rest-bridge-spring-boot-starter')
]

allprojects {
    group = 'io.github.artemy-osipov.thrift'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'

        testImplementation 'org.codehaus.groovy:groovy-test:3.0.7'

        def junitVersion = '5.7.0'
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    test {
        useJUnitPlatform()
    }
}

configure(micronautModules) {
    dependencies {
        def micronautBom = 'io.micronaut:micronaut-bom:2.4.2'
        annotationProcessor platform(micronautBom)
        implementation platform(micronautBom)
        testAnnotationProcessor platform(micronautBom)
    }
}

configure(springModules) {
    dependencies {
        def springBootBom = 'org.springframework.boot:spring-boot-dependencies:2.4.4'
        implementation platform(springBootBom)
        annotationProcessor platform(springBootBom)
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'
    }
}

configure(publishModules) {
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
    }

    signing {
        def signingKey = System.getenv('GPG_KEY')
        def signingPassword = System.getenv('GPG_PASSWORD')
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications
    }

    publishing {
        publications {
            maven(MavenPublication) {
                pom {
                    name = project.name
                    description = 'Thrift-Rest bridge for proxy thrift services'
                    url = 'https://github.com/artemy-osipov/thrift-rest-bridge'
                    licenses {
                        license {
                            name = 'MIT'
                            url = 'https://opensource.org/licenses/MIT'
                        }
                    }
                    developers {
                        developer {
                            id = 'artemy-osipov'
                            name = 'Artemy Osipov'
                            email = 'osipov.artemy@gmail.com'
                        }
                    }
                    scm {
                        connection = 'git@github.com:artemy-osipov/thrift-rest-bridge.git'
                        developerConnection = 'git@github.com:artemy-osipov/thrift-rest-bridge.git'
                        url = 'https://github.com/artemy-osipov/thrift-rest-bridge'
                    }
                }
            }
        }
    }
}
