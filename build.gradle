plugins {
    id 'com.jfrog.bintray' version '1.8.5' apply false
}

def micronautModules = [project(':rest-bridge-micronaut'), project(':examples:micronaut-app')]
def springModules = [project(':rest-bridge-spring-boot-starter'), project(':examples:spring-boot-app')]
def publishModules = [project(':rest-bridge-core'), project(':rest-bridge-micronaut'), project(':rest-bridge-spring-boot-starter')]

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'

    group = 'io.github.artemy.osipov.thrift'

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    repositories {
        jcenter()
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'

        testImplementation 'org.codehaus.groovy:groovy-test:3.0.3'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    }

    test {
        useJUnitPlatform()
    }
}

configure(micronautModules) {
    dependencies {
        def micronautBom = 'io.micronaut:micronaut-bom:2.0.0.M3'
        annotationProcessor platform(micronautBom)
        implementation platform(micronautBom)
        testAnnotationProcessor platform(micronautBom)
    }
}

configure(springModules) {
    dependencies {
        def springBootBom = 'org.springframework.boot:spring-boot-dependencies:2.2.6.RELEASE'
        implementation platform(springBootBom)
        annotationProcessor platform(springBootBom)
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'
    }
}

configure(publishModules) {
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
    }

    bintray {
        user = System.getenv('BINTRAY_USER')
        key = System.getenv('BINTRAY_KEY')
        publications = ['maven']
        pkg {
            repo = 'oss'
            name = it.name
            licenses = ['MIT']
            desc = 'Thrift-Rest bridge for proxy thrift services'
            websiteUrl = 'https://github.com/artemy-osipov/thrift-rest-bridge'
            issueTrackerUrl = 'https://github.com/artemy-osipov/thrift-rest-bridge/issues'
            vcsUrl = 'https://github.com/artemy-osipov/thrift-rest-bridge.git'

            githubRepo = 'artemy-osipov/thrift-rest-bridge'
            githubReleaseNotesFile = 'README.md'
        }
    }
}
